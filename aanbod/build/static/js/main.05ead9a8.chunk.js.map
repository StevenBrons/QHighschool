{"version":3,"sources":["components/CourseInfo.js","components/Course.js","components/CourseGroup.js","components/SubjectInfo.js","fetchData.js","components/LoadIcon.js","Page.js","index.js"],"names":["formatCourseId","courseId","padStart","CourseInfo","props","ref","React","createRef","window","scrollTo","top","this","current","offsetTop","innerHeight","behavior","course","id","className","courseName","toUpperCase","period","courseDescription","onClick","open","subjectName","schoolYear","style","background","backgroundRepeat","backgroundSize","backgroundPosition","onClose","day","enrollableFor","Component","Course","selected","large","text","color","backgroundImage","src","alt","COLORS","CourseGroup","scroller","title","coursesPerPage","innerWidth","maxPage","Math","floor","Object","keys","courses","length","colors","randomColors","state","page","addEventListener","e","matchMedia","matches","setState","scrollToPage","n","res","random","i","slice","splice","indexOf","push","margin","offsetLeft","left","children","sort","a","b","startYear","RegExp","yearA","parseInt","match","yearB","periodA","periodB","selectedCourse","showSubjectInfo","getSortedCourseIds","map","key","groupId","class","_","previousSubject","nextSubject","subject","description","handleError","$","ajax","url","type","dataType","error","then","coursesPerSubject","filter","enrollable","forEach","c","subjects","informationPerSubject","s","name","LoadIcon","isShowing","timeout","setTimeout","clearTimeout","Page","componentDidMount","fetchCourses","serverError","fetchSubjectInformation","subjectDescriptions","console","log","group","popOut","subjectInfo","removeSubjectInfo","subjectInfoId","Fragment","require","smoothscroll","polyfill","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.05ead9a8.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport './CourseInfo.css';\n\nfunction formatCourseId(courseId = \"\") {\n\treturn \"M\" + (courseId + \"\").padStart(4, \"0\");\n}\n\nclass CourseInfo extends Component {\n\tconstructor(props){\n\t\tsuper(props);\n\t\tthis.ref = React.createRef();\n\t}\n\n\tcomponentDidMount() {\n\t\t// scroll courseinfo to center\n\t\twindow.scrollTo({top: this.ref.current.offsetTop - window.innerHeight * 0.05, behavior: 'smooth'})\n\t}\n\n\trender() {\n\t\tconst course = this.props.course;\n\t\tconst id = course.id;\n\t\treturn (\n\t\t\t<div className='CourseInfo' ref={this.ref}>\n\t\t\t\t<div className='text-and-image' >\n\t\t\t\t\t<div className='info-text'>\n\t\t\t\t\t\t<h1 className='title'>\n\t\t\t\t\t\t\t{course.courseName.toUpperCase()}\n\t\t\t\t\t\t</h1>\n\t\t\t\t\t\t<div className='period'>\n\t\t\t\t\t\t\t<div className='square' />\n\t\t\t\t\t\t\t<p className='number'>\n\t\t\t\t\t\t\t\tBlok {course.period}\n\t\t\t\t\t\t\t</p>\n\t\t\t\t\t\t</div>\n\n\t\t\t\t\t\t<p className='description-title'>\n\t\t\t\t\t\t\tModule: Beschrijving\n\t\t\t\t\t</p>\n\n\t\t\t\t\t\t<p>\n\t\t\t\t\t\t\t{course.courseDescription}\n\t\t\t\t\t\t</p>\n\n\t\t\t\t\t\t<button\n\t\t\t\t\t\t\tclassName='enroll-button'\n\t\t\t\t\t\t\tonClick={() => { window.open(`https://app.q-highschool.nl/aanbod?vak=${course.subjectName}&blok=${course.period}&leerjaar=${course.schoolYear}`) }}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\tAANMELDEN\n\t\t\t\t\t</button>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div\n\t\t\t\t\t\tclassName='image'\n\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\tbackground: `url(https://q-highschool.nl/images/thumbnails/${formatCourseId(\n\t\t\t\t\t\t\t\tid\n\t\t\t\t\t\t\t)}.jpg), url(https://q-highschool.nl/images/thumbnails/default.jpg) no-repeat`,\n\t\t\t\t\t\t\tbackgroundRepeat: 'no-repeat',\n\t\t\t\t\t\t\tbackgroundSize: 'cover',\n\t\t\t\t\t\t\tbackgroundPosition: 'center center'\n\t\t\t\t\t\t}} />\n\t\t\t\t\t<button\n\t\t\t\t\t\tclassName='close-button'\n\t\t\t\t\t\tonClick={this.props.onClose}\n\t\t\t\t\t/>\n\t\t\t\t</div>\n\t\t\t\t<div className='extra-info'>\n\t\t\t\t\t<p className='extra-info-text'><b>Dag:</b> {course.day} </p>\n\t\t\t\t\t{/* <p className = 'extra-info-text'><b>Tijd:</b> {course.time}</p> */}\n\t\t\t\t\t<p className='extra-info-text'><b>Doelgroep:</b> {course.enrollableFor} </p>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t)\n\t}\n}\n\nexport default CourseInfo;\n","import React, { Component } from \"react\";\nimport \"./Course.css\";\n\nfunction formatCourseId(courseId = \"\") {\n  return \"M\" + (courseId + \"\").padStart(4, \"0\");\n}\n\nclass Course extends Component {\n  render() {\n    const { selected, large, text, onClick, courseId } = this.props;\n    const color = this.props.color;\n    return (\n      <div\n        className={\n          \"Course\" +\n          (large ? \" large\" : \"\") +\n          (selected ? \" selected\" : \"\") +\n          \" \" + color\n        }\n        onClick={onClick}\n        style={{\n          backgroundImage: `url(https://q-highschool.nl/images/thumbnails/${formatCourseId(\n            courseId\n          )}.jpg), url(https://q-highschool.nl/images/thumbnails/default.jpg)`\n        }}\n      >\n        <h2 className=\"text\">{text}</h2>\n        <img className=\"q-logo\" src=\"q.svg\" alt=\"\" />\n        {selected && <div className=\"arrow\" />}\n      </div>\n    );\n  }\n}\n\nexport default Course;\n","import React, { Component } from \"react\";\nimport Course from \"./Course\";\nimport \"./CourseGroup.css\";\n\nconst COLORS = [\n  \"purple\",\n  \"pink\",\n  \"blue\",\n  \"orange\",\n  \"red\",\n  \"green\",\n  \"yellow\"\n];\n\nclass CourseGroup extends Component {\n  constructor(props) {\n    super(props);\n    this.scroller = React.createRef();\n    this.title = React.createRef();\n    let coursesPerPage = window.innerWidth <= 700 ? 2 : 4; // mobile : desktop\n    let maxPage = Math.floor((Object.keys(props.courses).length - 1) / coursesPerPage);\n    let colors = this.randomColors(Object.keys(props.courses).length)\n    this.state = {\n      page: 0,\n      maxPage: maxPage,\n      coursesPerPage: coursesPerPage,\n      colors: colors\n    };\n\n    window.addEventListener(\"resize\", (e) => {\n      // in case on mobile, we shouldn't readjust the pages\n      if (!(window.matchMedia('(pointer: coarse)').matches)) {\n        // Check if resize changed the amount of courses displayed per page \n        if (window.innerWidth > 700 && this.state.coursesPerPage === 2) {\n          let page = Math.floor(this.state.page / 2);\n          let coursesPerPage = 4;\n          let maxPage = Math.floor((Object.keys(this.props.courses).length - 1) / coursesPerPage);\n          this.setState({\n            page: page,\n            coursesPerPage: coursesPerPage,\n            maxPage: maxPage,\n          })\n        } else if (window.innerWidth <= 700 && this.state.coursesPerPage === 4) {\n          let page = this.state.page * 2;\n          let coursesPerPage = 2;\n          let maxPage = Math.floor((Object.keys(this.props.courses).length - 1) / coursesPerPage);\n          this.setState({\n            page: page,\n            coursesPerPage: coursesPerPage,\n            maxPage: maxPage,\n          })\n        }\n        this.scrollToPage(this.state.page);\n      }\n    });\n  }\n\n  randomColors(n) {\n    let res = [COLORS[Math.floor(Math.random() * 7)]]\n    for (let i = 1; i < n; i++) {\n      let colors = COLORS.slice()\n      colors.splice(colors.indexOf(res[res.length - 1]), 1) // remove last color from pool\n      res.push(colors[Math.floor(Math.random() * 6)])\n    }\n    return res\n  }\n\n  scrollToPage(page) {\n    let scroller = this.scroller.current;\n    const margin = this.title.current.offsetLeft;\n    scroller.scrollTo({ left: scroller.children[this.state.coursesPerPage * page].offsetLeft - margin, behavior: 'smooth' });\n    this.setState({\n      page: page\n    });\n  }\n\n  getSortedCourseIds(courses) {// course objects -> ordered course ids\n    let ids = Object.keys(courses).sort((a, b) => {\n      let startYear = new RegExp(/(\\d{4})\\//) // '2019/2020' => 2019\n      let yearA = parseInt(courses[a].schoolYear.match(startYear)[1])\n      let yearB = parseInt(courses[b].schoolYear.match(startYear)[1])\n\n      if (yearA === yearB) {\n        let periodA = courses[a].period\n        let periodB = courses[b].period\n\n        if (periodA === periodB) {\n          return 0\n        }\n        return periodA - periodB\n      }\n      return yearA - yearB\n    })\n    return ids\n  }\n\n  render() {\n    const { courses, selectedCourse, showSubjectInfo } = this.props;\n    const { page, maxPage, colors } = this.state;\n    return (\n      <div className=\"CourseGroup\">\n        <h3 className=\"title\" ref={this.title}>\n          {this.props.title}\n        </h3>\n        {page !== 0 && (\n          <div\n            className=\"scroll-button left\"\n            onClick={() => this.scrollToPage(page - 1)}\n          />\n        )}\n        <div className=\"scroller\" ref={this.scroller}>\n          {this.getSortedCourseIds(courses).map((id, i) => {\n            return (\n              <Course\n                key={id}\n                groupId={id}\n                courseId={courses[id].courseId}\n                class=\"course\"\n                onClick={_ => this.props.onClick(id)}\n                text={courses[id].courseName.toUpperCase()}\n                selected={selectedCourse === id}\n                large={this.props.large}\n                color={colors[i]}\n              />\n            );\n          })}\n        </div>\n        {page !== maxPage && (\n          <div\n            className=\"scroll-button right\"\n            onClick={() => this.scrollToPage(page + 1)}\n          />\n        )}\n      </div>\n    );\n  }\n}\n\nexport default CourseGroup;\n","import React, {Component} from 'react';\nimport './SubjectInfo.css';\n\nclass CourseInfo extends Component {\n\n\trender() {\n\t\tlet {previousSubject, nextSubject, subject, onClose, description} = this.props;\n\t\treturn (\n\t\t\t<div\n\t\t\t\tclassName='SubjectInfo'\n\t\t\t>\n\t\t\t\t<div className='button-container'>\n\t\t\t\t\t{previousSubject && \n\t\t\t\t\t<div\n\t\t\t\t\t\tclassName='button previous-subject'\n\t\t\t\t\t\tonClick={previousSubject}\n\t\t\t\t\t/>\n\t\t\t\t\t}\n\t\t\t\t</div>\n\t\t\t\t<div className='text'>\n\t\t\t\t\t<h1 className='title'>Waar gaat het vak {subject} over?</h1>\n\t\t\t\t\t<p>{description}</p>\n\n\t\t\t\t</div>\n\t\t\t\t<div className='button-container'>\n\t\t\t\t\t{nextSubject && \n\t\t\t\t\t<div\n\t\t\t\t\t\tclassName='button next-subject'\n\t\t\t\t\t\tonClick={nextSubject}\n\t\t\t\t\t/>\n\t\t\t\t\t}\n\t\t\t\t</div>\n\t\t\t\t<button \n\t\t\t\t\tclassName='close-button' \n\t\t\t\t\tonClick={onClose} \n\t\t\t\t/>\n\t\t\t</div>\n\t\t)\n\t}\n}\n\nexport default CourseInfo;","import $ from 'jquery';\n\nexport async function fetchCourses(handleError) {\n\treturn $.ajax({\n\t\t// url: '/api/group/list',\n\t\turl: 'https://app.q-highschool.nl/api/group/list',\n\t\ttype: 'get',\n\t\tdataType: 'json',\n\t\terror: handleError\n\t}).then(courses => {\n\t\tlet coursesPerSubject = {}\n\t\tcourses\n\t\t\t.filter(({ enrollable }) => enrollable)\n\t\t\t.forEach(c => {\n\t\t\t\tif (!coursesPerSubject[c.subjectName]) {\n\t\t\t\t\tcoursesPerSubject[c.subjectName] = {};\n\t\t\t\t}\n\t\t\t\tcoursesPerSubject[c.subjectName][c.id] = c;\n\t\t\t})\n\t\treturn coursesPerSubject;\n\t})\n}\n\n\nexport async function fetchSubjectInformation(handleError) {\n\treturn $.ajax({\n\t\t// url: '/api/subject/list',\n\t\turl: 'https://app.q-highschool.nl/api/subject/list',\n\t\ttype: 'get',\n\t\tdataType: 'json',\n\t\terror: handleError\n\t}).then(subjects => {\n\t\tlet informationPerSubject = {};\n\t\tsubjects.forEach(s => {\n\t\t\tinformationPerSubject[s.name] = s.description;\n\t\t})\n\t\treturn informationPerSubject;\n\t})\n}","import React, { Component } from 'react';\nimport PulseLoader from 'react-spinners/PulseLoader';\n\nclass LoadIcon extends Component {\n\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t\tisShowing: false,\n\t\t};\n\t}\n\n\tcomponentDidMount() {\n\t\tthis.timeout = setTimeout(() => this.setState({ isShowing: true }), 300);\n\t}\n\n\tcomponentWillUnmount() {\n\t\tclearTimeout(this.timeout);\n\t}\n\n\trender() {\n\t\tif (this.state.isShowing) {\n\t\t\treturn (\n\t\t\t\t<PulseLoader\n\t\t\t\t\tcolor={'#ff7a03'}\n\t\t\t\t/>\n\t\t\t);\n\t\t}else {\n\t\t\treturn null;\n\t\t}\n\t}\n\n}\n\nexport default LoadIcon;","import React, { Component } from 'react';\nimport './Page.css';\nimport CourseInfo from './components/CourseInfo';\nimport CourseGroup from './components/CourseGroup';\nimport SubjectInfo from './components/SubjectInfo';\n// import Header from './components/Header';\nimport { fetchCourses, fetchSubjectInformation } from './fetchData';\nimport LoadIcon from './components/LoadIcon';\n\n\nclass Page extends Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      popOut: null,\n      subjectInfo: null,\n      courses: null,\n      subjectDescriptions: null,\n      serverError: false,\n    }\n  }\n\n  componentDidMount = () => {\n    fetchCourses(this.handleError).then(courses =>\n      this.setState({ courses: courses, serverError: false }))\n\n    fetchSubjectInformation(this.handleError).then(subjectDescriptions =>\n      this.setState({ subjectDescriptions: subjectDescriptions, serverError: false }))\n  }\n\n  handleError = e => {\n    console.log(e);\n    this.setState({\n      serverError: true,\n    })\n  }\n\n  onClick = (courseId, group) => {\n    let popOut = this.state.popOut;\n    if (popOut && popOut.group === group && popOut.courseId === courseId) {\n      popOut = null;\n    } else {\n      popOut = {\n        group: group,\n        courseId: courseId,\n      }\n    }\n    this.setState({\n      popOut: popOut,\n    })\n  }\n\n  showSubjectInfo = (subject) => {\n    if (subject === this.state.subjectInfo) {\n      this.removeSubjectInfo();\n      return;\n    }\n    this.setState({\n      subjectInfo: subject\n    })\n  }\n\n  removeSubjectInfo = () => {\n    this.setState({\n      subjectInfo: null\n    })\n  }\n\n  render() {\n    let { popOut, courses, subjectInfo, subjectDescriptions, serverError } = this.state;\n    if (serverError) {\n      return (\n        <h1 className='error'>\n          Er is een fout opgetreden met het verbinden met de server.\n        </h1>\n      )\n    }\n    if (!courses) {\n      return (\n        <LoadIcon />\n      )\n    }\n    const subjects = Object.keys(courses);\n    let nextSubject, previousSubject;\n    if (subjectInfo) {\n      let subjectInfoId = subjects.indexOf(subjectInfo)\n      if (subjectInfoId < subjects.length - 1) nextSubject = () => this.showSubjectInfo(subjects[subjectInfoId + 1]);\n      if (subjectInfoId > 0) previousSubject = () => this.showSubjectInfo(subjects[subjectInfoId - 1]);\n    }\n    return (\n      <div className='Page'>\n        {/* <Header /> */}\n        {subjectInfo &&\n          <SubjectInfo\n            nextSubject={nextSubject}\n            previousSubject={previousSubject}\n            subject={subjectInfo}\n            description={subjectDescriptions[subjectInfo]}\n            onClose={() => this.showSubjectInfo(null)}\n          />\n        }\n        {subjects.map((subject, i) =>\n          <React.Fragment key={i}>\n            <CourseGroup\n              title={subject}\n              key={i}\n              courses={courses[subject]}\n              onClick={courseId => this.onClick(courseId, subject)}\n              className='course-group'\n              selectedCourse={popOut && popOut.courseId}\n              showSubjectInfo={() => this.showSubjectInfo(subject)}\n            />\n            {popOut && popOut.group === subject &&\n              <CourseInfo\n                course={courses[popOut.group][popOut.courseId]}\n                key={Math.random()}\n                group={subject}\n                onClose={_ => this.onClick(popOut.courseId, popOut.group)}\n              />\n            }\n          </React.Fragment>\n        )}\n      </div>\n    )\n  }\n}\n\nexport default Page;\n","import 'react-app-polyfill/ie11';\nimport smoothscroll from 'smoothscroll-polyfill';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport Page from './Page';\nimport './index.css';\nrequire('typeface-roboto');\nsmoothscroll.polyfill();\n\nReactDOM.render(<Page />, document.getElementById('root'));\n"],"sourceRoot":""}